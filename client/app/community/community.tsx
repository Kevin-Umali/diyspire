"use client";

import { useEffect } from "react";
import Link from "next/link";
import { useCommunityGeneratedIdea } from "@/api/queries";
import { AxiosError } from "axios";

import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Skeleton } from "@/components/ui/skeleton";
import { useToast } from "@/components/ui/use-toast";
import ProjectCard from "@/components/community/diy-card";

export default function CommunityGeneratedIdeaList() {
  const { toast } = useToast();

  const { data: communityData, error, isLoading, isSuccess } = useCommunityGeneratedIdea();

  useEffect(() => {
    if (error && error instanceof AxiosError) {
      toast({
        title: `API ERROR - ${error.code}`,
        description: error.response?.data.error || "An error occurred while fetching data from the API.",
      });
    }

    if (error) {
      toast({
        title: "Unexpected Error!",
        description: "An unexpected error occurred. Please try again later.",
      });
    }
  }, [error, toast]);

  const renderLoadingSkeleton = () => {
    return (
      <div className="grid grid-cols-1 gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
        <div>
          <Skeleton className="mb-5 h-10 w-full" />
          <div className="space-y-2">
            <Skeleton className="h-4 w-full" />
            <Skeleton className="h-4 w-full" />
          </div>
          <Skeleton className="mt-5 h-4 w-3/5" />
        </div>
      </div>
    );
  };

  const renderNoDataDisplay = () => (
    <div className="flex h-full flex-col items-center justify-center">
      <Label className=" text-md mt-2 inline-block">No community ideas found.</Label>
      <Link href="/">
        <Button className="mt-2" aria-label="Generate one">
          Generate one
        </Button>
      </Link>
    </div>
  );

  const renderProjectCards = () => {
    return (
      <div className="grid grid-cols-1 gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
        {communityData?.data.map(({ id, title, description, tags, projectImage, createdAt }) => (
          <ProjectCard key={id} id={id} title={title} description={description} badges={tags} imgUrl={projectImage.urls.small} createdAt={createdAt} />
        ))}
      </div>
    );
  };

  return (
    <div className="container mx-auto px-5 py-12 sm:px-10">
      <div className="mb-12 text-center">
        <h1 className="mb-3 text-3xl font-semibold lg:text-4xl">&ldquo;MakeMeDIYspire&rdquo; Community Generated Idea</h1>
        <Label className="sm:text-md mt-2 inline-block text-sm">
          Explore a myriad of innovative DIY ideas generated by our creative community members. Dive into the inspiration behind each project and kickstart your next DIY journey.
        </Label>
      </div>
      {isLoading ? renderLoadingSkeleton() : isSuccess && communityData?.data.length > 0 ? renderProjectCards() : renderNoDataDisplay()}
    </div>
  );
}
